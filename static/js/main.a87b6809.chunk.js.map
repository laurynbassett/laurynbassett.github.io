{"version":3,"sources":["components/About.js","components/Banter.js","components/Contact.js","components/ContactForm.js","components/Gallery.js","components/GraceShopper.js","components/Graze.js","components/Home.js","components/Navbar.js","components/Orderista.js","components/Portfolio.js","components/ScrollHandler.js","components/Skills.js","components/Tracking/index.js","components/Welcome.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["About","props","className","ref","aboutRef","Card","CardContent","href","target","rel","GetApp","galleryImages","src","alt","lightboxImages","galleryGifs","lightboxGifs","Banter","toggleGifLightbox","gifSlide","setState","gifLightboxIsOpen","state","toggleImgLightbox","imgSlide","imgLightboxIsOpen","bind","this","classes","showArrows","map","idx","onClick","key","toggler","slide","sources","width","height","borderRa","frameBorder","allow","allowFullScreen","Divider","root","GitHub","images","toggleLightbox","Component","withStyles","theme","margin","alignSelf","backgroundColor","Contact","contactRef","initialState","name","email","subject","message","recaptcha","success","error","Alert","elevation","variant","ContactForm","handleSubmit","a","alert","axios","method","url","process","headers","data","JSON","stringify","setTimeout","console","handleClose","event","reason","handleChange","evt","value","log","style","fontFamily","onSubmit","StyledTextField","required","type","label","inputProps","onChange","multiline","rows","Send","sitekey","Snackbar","open","autoHideDuration","onClose","bodyStyle","severity","marginTop","spacing","color","borderColor","TextField","Gallery","GraceShopper","techStack","Graze","i","Home","aboutScroll","portfolioRef","skillsRef","useEffect","initGA","PageView","id","Navbar","handleDrawerToggle","openDrawer","setFixedNav","window","scrollY","showFixedNav","addEventListener","contactScroll","portfolioScroll","skillsScroll","Close","Menu","LinkedIn","Drawer","List","component","aria-label","ListItem","button","Orderista","Portfolio","ScrollHandler","location","element","document","getElementById","hash","scrollTo","behavior","top","offsetTop","propTypes","PropTypes","shape","string","isRequired","withRouter","VisibilitySensor","require","default","Skills","isVisible","Code","AccountTree","Build","ReactGA","initialize","pageview","pathname","search","Welcome","setTransition","transition","FORMIK_ENDPOINT","ExpandMore","Routes","exact","path","scrollToRef","current","App","useRef","Boolean","hostname","match","dotenv","config","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"8QAqEeA,EAhED,SAAAC,GACZ,OACE,yBAAKC,UAAU,gBAAgBC,IAAKF,EAAMG,UACxC,yBAAKF,UAAU,UAAf,YACA,yBAAKA,UAAU,OACb,kBAACG,EAAA,EAAD,CAAMH,UAAU,YACd,wCACA,kBAACI,EAAA,EAAD,CAAaJ,UAAU,QACrB,yBAAKA,UAAU,aAAf,oZASA,yBAAKA,UAAU,aAAf,uNAMA,yBAAKA,UAAU,aAAf,6WAUJ,kBAACG,EAAA,EAAD,CAAMH,UAAU,aACd,yCACA,kBAACI,EAAA,EAAD,CAAaJ,UAAU,QACrB,yBAAKA,UAAU,aAAf,2LAMA,yBAAKA,UAAU,aAAf,mJAKA,yBAAKA,UAAU,UACb,uBACEA,UAAU,eACVK,KAAK,oBACLC,OAAO,SACPC,IAAI,uBACJ,kBAACC,EAAA,EAAD,MACA,wD,kGCxCVC,G,MAAgB,CACpB,CAAEC,IAAK,4BAA6BC,IAAK,UACzC,CAAED,IAAK,8BAA+BC,IAAK,YAC3C,CAAED,IAAK,8BAA+BC,IAAK,YAC3C,CAAED,IAAK,2BAA4BC,IAAK,SACxC,CAAED,IAAK,iCAAkCC,IAAK,eAC9C,CAAED,IAAK,2BAA4BC,IAAK,WAGpCC,EAAiB,CACrB,4BACA,8BACA,8BACA,2BACA,iCACA,4BAGIC,EAAc,CAClB,CAAEH,IAAK,iCAAkCC,IAAK,eAC9C,CAAED,IAAK,8BAA+BC,IAAK,YAC3C,CAAED,IAAK,gCAAiCC,IAAK,eAGzCG,EAAe,CACnB,mCACA,gCACA,mCAGIC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAWRiB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEC,mBAAoB,EAAKC,MAAMD,kBAAmBF,cAbjD,EAgBnBI,kBAAoB,SAAAC,GAClB,EAAKJ,SAAS,CAAEK,mBAAoB,EAAKH,MAAMG,kBAAmBD,cAflE,EAAKF,MAAQ,CACXH,SAAU,EACVE,mBAAmB,EACnBG,SAAU,EACVC,mBAAmB,GAErB,EAAKP,kBAAoB,EAAKA,kBAAkBQ,KAAvB,gBACzB,EAAKH,kBAAoB,EAAKA,kBAAkBG,KAAvB,gBATR,E,qDAoBT,IAAD,SAC8DC,KAAKL,MAAlEH,EADD,EACCA,SAAUE,EADX,EACWA,kBAAmBG,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,kBACvCG,EAAYD,KAAK1B,MAAjB2B,QAER,OACE,yBAAK1B,UAAU,qBAEb,yBAAKA,UAAU,UAAf,UAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UAEb,kBAAC,WAAD,CAAU2B,YAAY,GACnBlB,EAAcmB,KAAI,WAAeC,GAAf,IAAGnB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OACjB,yBAAKX,UAAU,GAAG8B,QAAS,kBAAM,EAAKT,kBAAkBQ,EAAM,IAAIE,IAAKpB,GACrE,yBAAKA,IAAKA,EAAKD,IAAKA,SAI1B,kBAAC,IAAD,CAAYsB,QAAST,EAAmBU,MAAOX,EAAUY,QAAStB,IAClE,yBAAKZ,UAAU,SACb,4BACEmC,MAAM,OACNC,OAAO,OACP1B,IAAI,4CACJ2B,UAAQ,EACRC,YAAY,IACZC,MAAM,0EACNC,iBAAe,MAIrB,yBAAKxC,UAAU,4BACb,yBAAKA,UAAU,mBAAf,YAEA,yBAAKA,UAAU,QAAf,qGAGA,yBAAKA,UAAU,QAAf,0QAKA,yBAAKA,UAAU,QAAf,qcAOA,kBAACyC,EAAA,EAAD,CAASzC,UAAW0B,EAAQgB,OAE5B,yBAAK1C,UAAU,mBAAf,cACA,yBAAKA,UAAU,QAAf,gEACgD,6BADhD,4DAEsD,6BAFtD,0CAE8F,6BAF9F,uDAKA,kBAACyC,EAAA,EAAD,CAASzC,UAAW0B,EAAQgB,OAC5B,uBACE1C,UAAU,OACVK,KAAK,8CACLC,OAAO,SACPC,IAAI,uBAEJ,kBAACoC,EAAA,EAAD,SAIN,yBAAK3C,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBAAf,mBACA,yBAAKA,UAAU,QAAf,0TAOF,yBAAKA,UAAU,oBACb,uCACA,yBAAKA,UAAU,QAAf,yNAMA,kDACA,yBAAKA,UAAU,QAAf,wrBASA,yBAAKA,UAAU,QAAf,8fAQA,6DACA,yBAAKA,UAAU,QAAf,4JAEmD,MAGrD,yBAAKA,UAAU,oBACb,yCACA,yBAAKA,UAAU,QAAf,meASJ,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAS4C,OAAQ/B,EAAagC,eAAgBpB,KAAKT,oBACnD,kBAAC,IAAD,CAAYgB,QAASb,EAAmBc,MAAOhB,EAAUiB,QAASpB,MAatE,yBAAKd,UAAU,a,GA/JF8C,aAqKNC,eA5MG,SAAAC,GAAK,MAAK,CAC1BN,KAAM,CACJO,OAAQ,GACRd,MAAO,MACPe,UAAW,SACXC,gBAAiB,YAuMNJ,CAAsBhC,GCxMtBqC,EAVC,SAAArD,GACd,OACE,yBAAKC,UAAU,kBAAkBC,IAAKF,EAAMsD,YAC1C,yBAAKrD,UAAU,UAAf,WACA,yBAAKA,UAAU,aAAf,uBACA,kBAAC,EAAD,Q,8FCAAsD,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,SAAS,EACTC,OAAO,GAGT,SAASC,EAAM/D,GACb,OAAO,kBAAC,IAAD,eAAUgE,UAAW,EAAGC,QAAQ,UAAajE,I,IAGjCkE,E,kDACnB,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IAcRmE,aAfmB,sBAeJ,sCAAAC,EAAA,oEAE0C,EAAK/C,MAAlDmC,EAFG,EAEHA,KAAMC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,QAASC,EAF5B,EAE4BA,UAE1B,KAATJ,EAJO,gBAKTa,MAAM,mCALG,0BAMU,KAAVZ,EANA,iBAOTY,MAAM,+BAPG,2BAQY,KAAZX,EARA,iBASTW,MAAM,iCATG,2BAUY,KAAZV,EAVA,iBAWTU,MAAM,iCAXG,2BAYc,KAAdT,EAZA,iBAaTS,MAAM,6BAbG,yCAeHC,IAAM,CACVC,OAAQ,OACRC,IAAI,GAAD,OAAKC,uDACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBrB,OACAC,QACAC,UACAC,cAzBK,QA6BT,EAAKxC,SAAS,CAAE0C,SAAS,IACzBiB,YAAW,kBAAM,EAAK3D,SAASoC,KAAe,KA9BrC,0DAiCX,EAAKpC,SAAS,CAAE2C,OAAO,IACvBO,MAAM,2CACNU,QAAQjB,MAAR,MAnCW,0DAfI,EAsDnBkB,YAAc,SAACC,EAAOC,GACL,cAAXA,GAIJ,EAAK/D,SAAS,CAAE0C,SAAS,KAzDzB,EAAKxC,MAAQkC,EACb,EAAK4B,aAAe,EAAKA,aAAa1D,KAAlB,gBACpB,EAAK0C,aAAe,EAAKA,aAAa1C,KAAlB,gBACpB,EAAKuD,YAAc,EAAKA,YAAYvD,KAAjB,gBALF,E,yDAQN2D,GACX1D,KAAKP,SAAL,eACGiE,EAAI7E,OAAOiD,KAAO4B,EAAI7E,OAAO8E,QAEhCN,QAAQO,IAAI,gBAAiB5D,KAAKL,S,+BAkD1B,IAAD,SACmCK,KAAKL,MAAvCmC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,QAASC,EADvB,EACuBA,QACxB4B,EAAQ,CAAEC,WAAY,aAC5B,OACE,kBAAC,WAAD,KACE,0BAAMC,SAAU/D,KAAKyC,aAAclE,UAAU,gBAC3C,kBAACyF,EAAD,CACEC,UAAQ,EACR1F,UAAU,aACV2F,KAAK,OACLpC,KAAK,OACLqC,MAAM,OACNR,MAAO7B,EACPsC,WAAY,CAAEP,SACdtB,QAAQ,WACR8B,SAAUrE,KAAKyD,eAEjB,kBAACO,EAAD,CACEC,UAAQ,EACR1F,UAAU,aACV2F,KAAK,OACLpC,KAAK,QACLqC,MAAM,QACNR,MAAO5B,EACPqC,WAAY,CAAEP,SACdtB,QAAQ,WACR8B,SAAUrE,KAAKyD,eAEjB,kBAACO,EAAD,CACEC,UAAQ,EACR1F,UAAU,aACV2F,KAAK,OACLpC,KAAK,UACLqC,MAAM,UACNR,MAAO3B,EACPoC,WAAY,CAAEP,SACdtB,QAAQ,WACR8B,SAAUrE,KAAKyD,eAEjB,kBAACO,EAAD,CACEC,UAAQ,EACR1F,UAAU,aACV2F,KAAK,OACLpC,KAAK,UACLqC,MAAM,UACNR,MAAO1B,EACPqC,WAAS,EACTC,KAAM,EACNH,WAAY,CAAEP,SACdtB,QAAQ,WACR8B,SAAUrE,KAAKyD,eAEjB,yBAAKlF,UAAU,cACb,yBAAKA,UAAU,aAAa8B,QAASL,KAAKyC,cACxC,kBAAC+B,EAAA,EAAD,MACA,+CAED1C,GAAQC,GAASE,GAChB,kBAAC,IAAD,CACEwC,QAAS1B,2CACTjB,KAAK,YACLuC,SAAU,SAAAV,GAAK,OAAI,EAAKlE,SAAS,CAAEyC,UAAWyB,SAMtD,kBAACe,EAAA,EAAD,CACEC,KAAM3E,KAAKL,MAAMwC,QACjByC,iBAAkB,IAClBC,QAAS7E,KAAKsD,YACdwB,UAAW,CAAEpD,gBAAiB,YAC9B,kBAAC,EAAD,CAAOmD,QAAS7E,KAAKsD,YAAayB,SAAS,WAA3C,6CAIF,kBAACL,EAAA,EAAD,CACEC,KAAM3E,KAAKL,MAAMyC,MACjBwC,iBAAkB,IAClBC,QAAS7E,KAAKsD,aACd,kBAAC,EAAD,CAAOuB,QAAS7E,KAAKsD,YAAayB,SAAS,WAA3C,kD,GA/I+B1D,aAwJnC2C,EAAkB1C,aAAW,SAAAC,GAAK,MAAK,CAC3CN,KAAM,CACJ,YAAa,CACX+D,UAAWzD,EAAM0D,QAAQ,IAE3B,sBAAuB,CACrBC,MAAO,WAET,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,gBAhBG7D,CAoBpB8D,KCnLWC,EAdC,SAAA/G,GAAU,IAChB6C,EAA2B7C,EAA3B6C,OAAQC,EAAmB9C,EAAnB8C,eAEhB,OACE,yBAAK7C,UAAU,WACZ4C,EAAOhB,KAAI,WAAeC,GAAf,IAAGnB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OACV,yBAAKX,UAAU,kBAAkB8B,QAAS,kBAAMe,EAAehB,EAAM,IAAIE,IAAKpB,GAC5E,yBAAKA,IAAKA,EAAKD,IAAKA,EAAKV,UAAU,gBCH9B+G,EAJM,WACnB,OAAO,+CCgBHC,EAAY,CAChB,CAAEtG,IAAK,sCAAuCC,IAAK,gBACnD,CAAED,IAAK,8BAA+BC,IAAK,QAC3C,CAAED,IAAK,kCAAmCC,IAAK,YAC/C,CAAED,IAAK,mCAAoCC,IAAK,aAChD,CAAED,IAAK,2CAA4CC,IAAK,oBAGpDF,EAAgB,CACpB,CAAEC,IAAK,0BAA2BC,IAAK,SACvC,CAAED,IAAK,yBAA0BC,IAAK,QACtC,CAAED,IAAK,4BAA6BC,IAAK,WACzC,CAAED,IAAK,4BAA6BC,IAAK,WACzC,CAAED,IAAK,2BAA4BC,IAAK,UACxC,CAAED,IAAK,yBAA0BC,IAAK,QACtC,CAAED,IAAK,6BAA8BC,IAAK,aAGtCC,EAAiB,CACrB,0BACA,yBACA,4BACA,4BACA,2BACA,yBACA,8BAGIC,EAAc,CAClB,CACEH,IAAK,yBACLC,IAAK,QAEP,CACED,IAAK,4BACLC,IAAK,WAEP,CACED,IAAK,yBACLC,IAAK,QAEP,CACED,IAAK,6BACLC,IAAK,aAIHG,EAAe,CACnB,2BACA,8BACA,2BACA,gCAGImG,G,kDACJ,WAAYlH,GAAQ,IAAD,8BACjB,cAAMA,IAWRiB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEC,mBAAoB,EAAKC,MAAMD,kBAAmBF,cAbjD,EAgBnBI,kBAAoB,SAAAC,GAClB,EAAKJ,SAAS,CAAEK,mBAAoB,EAAKH,MAAMG,kBAAmBD,cAflE,EAAKF,MAAQ,CACXH,SAAU,EACVE,mBAAmB,EACnBG,SAAU,EACVC,mBAAmB,GAErB,EAAKP,kBAAoB,EAAKA,kBAAkBQ,KAAvB,gBACzB,EAAKH,kBAAoB,EAAKA,kBAAkBG,KAAvB,gBATR,E,qDAoBT,IAAD,SAC8DC,KAAKL,MAAlEH,EADD,EACCA,SAAUE,EADX,EACWA,kBAAmBG,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,kBACvCG,EAAYD,KAAK1B,MAAjB2B,QAER,OACE,yBAAK1B,UAAU,qBAEb,yBAAKA,UAAU,UAAf,SAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UAEb,kBAAC,WAAD,CAAU2B,YAAY,GACnBlB,EAAcmB,KAAI,WAAeC,GAAf,IAAGnB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OACjB,yBAAKX,UAAU,GAAG8B,QAAS,kBAAM,EAAKT,kBAAkBQ,EAAM,IAAIE,IAAKpB,GACrE,yBAAKA,IAAKA,EAAKD,IAAKA,SAI1B,kBAAC,IAAD,CAAYsB,QAAST,EAAmBU,MAAOX,EAAUY,QAAStB,IAClE,yBAAKZ,UAAU,oBACb,yBAAKA,UAAU,kBAAf,mBACA,yBAAKA,UAAU,QAAf,qJAIA,yBAAKA,UAAU,QAAf,saAQJ,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,mBAAf,YAEA,yBAAKA,UAAU,QAAf,4LAIA,yBAAKA,UAAU,QAAf,iLAIA,kBAACyC,EAAA,EAAD,CAASzC,UAAW0B,EAAQgB,OAE5B,yBAAK1C,UAAU,mBAAf,cACA,yBAAKA,UAAU,SAAf,mDACwC,6BADxC,oDAE8C,6BAF9C,8CAKA,yBAAKA,UAAU,cAAcgH,EAAUpF,KAAI,SAAAsF,GAAC,OAAI,yBAAKxG,IAAKwG,EAAExG,IAAKC,IAAKuG,EAAEvG,UACxE,kBAAC8B,EAAA,EAAD,CAASzC,UAAW0B,EAAQgB,OAC5B,uBAAG1C,UAAU,OAAOK,KAAK,yCAAyCC,OAAO,SAASC,IAAI,uBACpF,kBAACoC,EAAA,EAAD,SAIN,yBAAK3C,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBAAf,cACA,yBAAKA,UAAU,QAAf,4OAIO,IACP,yBAAKA,UAAU,QAAf,uQAMF,6BACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBAAf,iBACA,yBAAKA,UAAU,QAAf,0NAKA,yBAAKA,UAAU,QAAf,UACS,kDADT,qEACyG,IACvG,wCAFF,OAEyB,6CAFzB,gIAOJ,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAS4C,OAAQ/B,EAAagC,eAAgBpB,KAAKT,oBACnD,kBAAC,IAAD,CAAYgB,QAASb,EAAmBc,MAAOhB,EAAUiB,QAASpB,MAItE,yBAAKd,UAAU,a,GArHH8C,aA2HLC,gBA1LG,SAAAC,GAAK,MAAK,CAC1BN,KAAM,CACJO,OAAQ,GACRd,MAAO,MACPe,UAAW,SACXC,gBAAiB,YAqLNJ,CAAsBkE,ICrKtBE,GA5BF,SAAApH,GAAU,IACbqH,EAA+DrH,EAA/DqH,YAAalH,EAAkDH,EAAlDG,SAAUmD,EAAwCtD,EAAxCsD,WAAYgE,EAA4BtH,EAA5BsH,aAAcC,EAAcvH,EAAduH,UAQzD,OANAC,qBAAU,WAERC,KACAC,QAIA,yBAAKC,GAAG,QACN,kBAAC,GAAD,CAASN,YAAaA,IACtB,yBAAKM,GAAG,UACN,kBAAC,EAAD,CAAOxH,SAAUA,KAEnB,yBAAKwH,GAAG,WACN,kBAAC,GAAD,CAAQJ,UAAWA,KAErB,yBAAKI,GAAG,cACN,kBAAC,GAAD,CAAWL,aAAcA,KAE3B,yBAAKK,GAAG,YACN,kBAAC,EAAD,CAASrE,WAAYA,O,kDCpBRsE,G,kDACnB,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAaR6H,mBAAqB,WACnB,EAAK1G,SAAS,CAAE2G,YAAa,EAAKzG,MAAMyG,cAfvB,EAkBnBC,YAAc,WACRC,OAAOC,SAAW,IACpB,EAAK9G,SAAS,CACZ+G,cAAc,IAGhB,EAAK/G,SAAS,CACZ+G,cAAc,KAvBlB,EAAK7G,MAAQ,CACXyG,YAAY,EACZI,cAAc,GAEhB,EAAKL,mBAAqB,EAAKA,mBAAmBpG,KAAxB,gBAC1B,EAAKsG,YAAc,EAAKA,YAAYtG,KAAjB,gBAPF,E,gEAWjBuG,OAAOG,iBAAiB,SAAUzG,KAAKqG,e,+BAmB/B,IAAD,EAELrG,KAAK1B,MADCqH,EADD,EACCA,YAAae,EADd,EACcA,cAAeC,EAD7B,EAC6BA,gBAAiBC,EAD9C,EAC8CA,aAGrD,OACE,yBACEX,GAAG,MACH1H,UAAS,cAASyB,KAAKL,MAAM6G,aAAe,QAAU,WACtD,yBAAKP,GAAG,WAEN,uBAAGrH,KAAK,KACN,yBAAKqH,GAAG,YACN,yBAAK1H,UAAU,OAAOU,IAAI,eAAeC,IAAI,WAKhDc,KAAKL,MAAMyG,WACV,yBAAK7H,UAAU,oBACb,kBAACsI,GAAA,EAAD,CAAOtI,UAAU,WAAW8B,QAASL,KAAKmG,sBAG5C,yBAAK5H,UAAU,oBACb,kBAACuI,GAAA,EAAD,CAAMvI,UAAU,WAAW8B,QAASL,KAAKmG,sBAK7C,yBAAKF,GAAG,aACN,uBAAG1H,UAAU,WAAW8B,QAASsF,GAAjC,SAGA,uBAAGpH,UAAU,WAAW8B,QAASuG,GAAjC,UAGA,uBAAGrI,UAAU,WAAW8B,QAASsG,GAAjC,YAGA,uBACEpI,UAAU,WACVK,KAAK,oBACLC,OAAO,SACPC,IAAI,uBAJN,UAOA,uBAAGP,UAAU,WAAW8B,QAASqG,GAAjC,WAGA,yBAAKnI,UAAU,SACb,uBACEA,UAAU,SACVK,KAAK,mCACLC,OAAO,SACPC,IAAI,uBACJ,kBAACoC,EAAA,EAAD,OAEF,uBACE3C,UAAU,YACVK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBACJ,kBAACiI,GAAA,EAAD,SAML/G,KAAKL,MAAMyG,YACV,yBAAKH,GAAG,cACN,kBAAC,GAAWjG,KAAK1B,c,GApGK+C,aA6G9B2F,GAAS,SAAA1I,GAAU,IACfqH,EAA8DrH,EAA9DqH,YAAae,EAAiDpI,EAAjDoI,cAAeC,EAAkCrI,EAAlCqI,gBAAiBC,EAAiBtI,EAAjBsI,aAErD,OACE,kBAACK,GAAA,EAAD,CAAMC,UAAU,MAAM3I,UAAU,aAAa4I,aAAW,YACtD,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAAC9I,UAAU,cAAc8B,QAASsF,GAAlD,SAGA,kBAACyB,GAAA,EAAD,CAAUC,QAAM,EAAC9I,UAAU,cAAc8B,QAASuG,GAAlD,UAGA,kBAACQ,GAAA,EAAD,CAAUC,QAAM,EAAC9I,UAAU,cAAc8B,QAASsG,GAAlD,aAGA,kBAACS,GAAA,EAAD,CAAUC,QAAM,GACd,uBAAGzI,KAAK,oBAAoBC,OAAO,SAASC,IAAI,uBAAhD,WAIF,kBAACsI,GAAA,EAAD,CAAUC,QAAM,EAAC9I,UAAU,cAAc8B,QAASqG,GAAlD,WAGA,kBAACU,GAAA,EAAD,aAAUC,QAAM,EAAC9I,UAAU,eAA3B,YAAmD,SACjD,uBACEA,UAAU,SACVK,KAAK,mCACLC,OAAO,SACPC,IAAI,uBACJ,kBAACoC,EAAA,EAAD,OAEF,uBACE3C,UAAU,YACVK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBACJ,kBAACiI,GAAA,EAAD,UC/IKO,GAJG,WAChB,OAAO,2CCgHMC,GAhHG,SAAAjJ,GAChB,OACE,yBAAKC,UAAU,oBAAoBC,IAAKF,EAAMsH,cAC5C,yBAAKrH,UAAU,UAAf,8BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBACb,uBACEK,KAAK,8CACLC,OAAO,SACPC,IAAI,uBAEJ,sCACA,yBAAKP,UAAU,aAAf,gBAIJ,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,uBACEK,KAAK,8CACLC,OAAO,SACPC,IAAI,uBACJ,yBAAKG,IAAI,4BAA4BC,IAAI,kBACzC,yBAAKD,IAAI,8BAA8BC,IAAI,oBAC3C,yBAAKD,IAAI,gCAAgCC,IAAI,oBAKrD,yBAAKX,UAAU,aACb,yBAAKA,UAAU,qBACb,uBACEK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAEJ,qCACA,yBAAKP,UAAU,aAAf,gBAIJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,uBACEK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBACJ,yBAAKG,IAAI,4BAA4BC,IAAI,kBACzC,yBAAKD,IAAI,yBAAyBC,IAAI,eACtC,yBAAKD,IAAI,yBAAyBC,IAAI,oBAMhD,yBAAKX,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBACb,uBACEK,KAAK,6DACLC,OAAO,SACPC,IAAI,uBAEJ,6CACA,yBAAKP,UAAU,aAAf,oBAIJ,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,uBACEK,KAAK,6DACLC,OAAO,SACPC,IAAI,uBACJ,yBACEG,IAAI,iCACJC,IAAI,2BAMd,yBAAKX,UAAU,aACb,yBAAKA,UAAU,qBACb,uBACEK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAEJ,yCACA,yBAAKP,UAAU,aAAf,qBAIJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,uBACEK,KAAK,6CACLC,OAAO,SACPC,IAAI,uBACJ,yBAAKG,IAAI,6BAA6BC,IAAI,0B,2BCrGpDsI,GAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAevB,OAdA3B,qBACE,WACE,IAAM4B,EAAUC,SAASC,eAAeH,EAASI,MAEjDzE,YAAW,WACTkD,OAAOwB,SAAS,CACdC,SAAUL,EAAU,SAAW,OAC/BM,IAAKN,EAAUA,EAAQO,UAAY,MAEpC,OAEL,CAAER,IAGG,MAGTD,GAAcU,UAAY,CACxBT,SAAUU,KAAUC,MAAM,CACxBP,KAAMM,KAAUE,SACfC,YAGUC,oBAAWf,I,8BCxBpBgB,GAAmBC,EAAQ,KAA2BC,QAEvCC,G,kDACnB,WAAYrK,GAAQ,IAAD,8BACjB,cAAMA,IAOR+F,SAAW,SAAAuE,GACLA,EACF,EAAKnJ,SAAS,CAAEmJ,WAAW,IAE3B,EAAKnJ,SAAS,CAAEmJ,WAAW,KAV7B,EAAKjJ,MAAQ,CACXiJ,WAAW,GAEb,EAAKvE,SAAW,EAAKA,SAAStE,KAAd,gBALC,E,qDAiBjB,OACE,kBAACyI,GAAD,CAAkBnE,SAAUrE,KAAKqE,UAC/B,yBAAK9F,UAAU,iBAAiBC,IAAKwB,KAAK1B,MAAMuH,WAC9C,yBAAKtH,UAAU,UAAf,UACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBACb,kBAACsK,GAAA,EAAD,CACEtK,UAAS,8BACPyB,KAAKL,MAAMiJ,UAAY,UAAY,MAGvC,4CAEF,yBAAKrK,UAAU,kBAAf,+JAMF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,sBACb,kBAACuK,GAAA,EAAD,CACEvK,UAAS,8BACPyB,KAAKL,MAAMiJ,UAAY,UAAY,MAGvC,4CAEF,yBAAKrK,UAAU,oBAAf,gGAKF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAACwK,GAAA,EAAD,CACExK,UAAS,8BACPyB,KAAKL,MAAMiJ,UAAY,UAAY,MAGvC,yDAEF,yBAAKrK,UAAU,mBAAf,sH,GA7DsB8C,a,SCJvB0E,GAAS,WACpBiD,KAAQC,WAAWlG,mBAGRiD,GAAW,WACtBgD,KAAQE,SAAS5C,OAAOmB,SAAS0B,SAAW7C,OAAOmB,SAAS2B,S,UCHzCC,G,kDACnB,WAAY/K,GAAQ,IAAD,8BACjB,cAAMA,IAWRgL,cAAgB,WACVhD,OAAOC,SAAW,IACpB,EAAK9G,SAAS,CACZ8J,YAAY,IAGd,EAAK9J,SAAS,CACZ8J,YAAY,KAjBhB,EAAK5J,MAAQ,CACX4J,YAAY,GAEd,EAAKD,cAAgB,EAAKA,cAAcvJ,KAAnB,gBALJ,E,gEASjBuG,OAAOG,iBAAiB,SAAUzG,KAAKsJ,iB,+BAgBvC,OACE,yBAAK/K,UAAU,mBACb,2BAAIwE,6YAAYyG,iBAChB,yBAAKjL,UAAU,cAAf,wBACA,yBACEA,UAAS,kBAAayB,KAAKL,MAAM4J,YAAc,cAC/CtK,IAAI,sBACJC,IAAI,YAEN,yBAAKX,UAAU,eAAf,wBACA,yBAAKA,UAAU,mBACb,uBAAG8B,QAASL,KAAK1B,MAAMqH,aACrB,yBAAKpH,UAAU,SACb,kBAACkL,GAAA,EAAD,CACElL,UAAS,oBAAeyB,KAAKL,MAAM4J,YAAc,gBAEnD,kBAACE,GAAA,EAAD,CACElL,UAAS,oBAAeyB,KAAKL,MAAM4J,YAAc,wB,GA3C5BlI,aC2BtBqI,GA1BA,SAAApL,GAAU,IACfqH,EAA+DrH,EAA/DqH,YAAalH,EAAkDH,EAAlDG,SAAUmD,EAAwCtD,EAAxCsD,WAAYgE,EAA4BtH,EAA5BsH,aAAcC,EAAcvH,EAAduH,UAEzD,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CACE8D,OAAK,EACLC,KAAK,IACL1C,UAAW,kBACT,kBAAC,GAAD,CACEvB,YAAaA,EACblH,SAAUA,EACVmD,WAAYA,EACZgE,aAAcA,EACdC,UAAWA,OAIjB,kBAAC,KAAD,CAAO8D,OAAK,EAACC,KAAK,UAAU1C,UAAW5H,IACvC,kBAAC,KAAD,CAAOqK,OAAK,EAACC,KAAK,iBAAiB1C,UAAW5B,IAC9C,kBAAC,KAAD,CAAOqE,OAAK,EAACC,KAAK,SAAS1C,UAAW1B,KACtC,kBAAC,KAAD,CAAOmE,OAAK,EAACC,KAAK,aAAa1C,UAAWI,OCjB1CuC,GAAc,SAAArL,GAClB,OAAQA,EAAIsL,QAAQvL,WAClB,IAAK,gBACH+H,OAAOwB,SAAS,EAAGtJ,EAAIsL,QAAQ7B,UAAY,KAC3C,MAEF,IAAK,iBACH3B,OAAOwB,SAAS,EAAGtJ,EAAIsL,QAAQ7B,UAAY,KAC3C,MAEF,IAAK,oBACH3B,OAAOwB,SAAS,EAAGtJ,EAAIsL,QAAQ7B,UAAY,KAC3C,MAEF,IAAK,kBACH3B,OAAOwB,SAAS,EAAGtJ,EAAIsL,QAAQ7B,UAAY,OAwClC8B,OAjCf,SAAazL,GAEX,IAAMG,EAAWuL,iBAAO,MAClBpI,EAAaoI,iBAAO,MACpBpE,EAAeoE,iBAAO,MACtBnE,EAAYmE,iBAAO,MAGnBrE,EAAc,kBAAMkE,GAAYpL,IAKtC,OACE,yBAAKF,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEoH,YAAaA,EACbe,cATgB,kBAAMmD,GAAYjI,IAUlC+E,gBATkB,kBAAMkD,GAAYjE,IAUpCgB,aATe,kBAAMiD,GAAYhE,MAWnC,kBAAC,GAAD,CACEF,YAAaA,EACblH,SAAUA,EACVmD,WAAYA,EACZgE,aAAcA,EACdC,UAAWA,MC9CCoE,QACW,cAA7B3D,OAAOmB,SAASyC,UAEe,UAA7B5D,OAAOmB,SAASyC,UAEhB5D,OAAOmB,SAASyC,SAASC,MAAM,2DCJnCC,IAAOC,SAYPC,IAASC,OAEP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAGF5C,SAASC,eAAe,SD6FpB,kBAAmB4C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1I,GACLiB,QAAQjB,MAAMA,EAAMH,a","file":"static/js/main.a87b6809.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Card, CardContent } from '@material-ui/core';\nimport { GetApp } from '@material-ui/icons';\n\nconst About = props => {\n  return (\n    <div className=\"section-about\" ref={props.aboutRef}>\n      <div className=\"header\">About Me</div>\n      <div className=\"row\">\n        <Card className=\"col left\">\n          <h3>Overview</h3>\n          <CardContent className=\"text\">\n            <div className=\"paragraph\">\n              I'm a Full Stack Developer with a degree in Psychology and\n              Sociology. Through my professional background in Ecommerce and\n              Data Analysis, I was exposed to coding and became fascinated with\n              the freedom and possibilities that technology opened up. This\n              influenced my non-technical work experiences, where I always\n              sought out ways to improve existing business processes via\n              technological implementations.\n            </div>\n            <div className=\"paragraph\">\n              In 2019, I took the leap to becoming a professional developer and\n              learned JavaScript on my own before being accepted to Fullstack\n              Academy in Chicago, where I completed their 16-week immersive\n              programming course.\n            </div>\n            <div className=\"paragraph\">\n              For the last two years, I've worked as the sole Full Stack\n              Developer for a Toronto-based start up. This experience has\n              provided me with the unique opportunity to build a mobile app and\n              accompanying admin dashboard web app from the start. On a daily\n              basis I am faced with new challenges, requiring me to adapt and\n              look at problems from a different perspective.\n            </div>\n          </CardContent>\n        </Card>\n        <Card className=\"col right\">\n          <h3>Objective</h3>\n          <CardContent className=\"text\">\n            <div className=\"paragraph\">\n              I would like to leverage my knowledge of consumer needs and\n              understanding of how people interact with technology in designing\n              and creating interactive user interfaces and experiences.\n            </div>\n\n            <div className=\"paragraph\">\n              I'm looking to build on my existing development experience and\n              grow with a company where I can contribute to and be a part of a\n              bigger picture.\n            </div>\n            <div className=\"button\">\n              <a\n                className=\"download btn\"\n                href=\"/files/resume.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <GetApp />\n                <span>Download Resume</span>\n              </a>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n\n// Original About Blurb\n\n// I'm a Full Stack Developer with a degree in Psychology and\n// Sociology. Through my professional background in Ecommerce and Data\n// Analysis, I was exposed to coding and became fascinated with the\n// freedom and possibilities that technology opened up. This influenced\n// my non-technical work experiences, where I always sought out ways to\n// improve existing business processes via technological\n// implementations.\n\n// In 2019, I took the leap to becoming a professional developer and\n// learned JavaScript on my own before being accepted to Fullstack\n// Academy in Chicago, where I completed their 16-week immersive\n// programming course. FSA is a highly competitive, top-ranked school\n// but what sets them apart from others is their focus on pair\n// programming.\n\n// As an avid problem solver, being a developer gives me the\n// opportunity to challenge myself in ways I never thought possible.\n// Since I was a child, I have always gravitated towards DIY projects\n// and crafts, so one of the biggest rewards of development is being\n// able to see a project through from inception to completion.\n","import React, { Component } from 'react'\nimport { GitHub } from '@material-ui/icons'\nimport { Divider } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport FsLightbox from 'fslightbox-react'\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\n\nimport { Gallery } from '.'\n\nconst useStyles = theme => ({\n  root: {\n    margin: 20,\n    width: '90%',\n    alignSelf: 'center',\n    backgroundColor: 'white'\n  }\n})\n\nconst galleryImages = [\n  { src: '/images/banter/splash.png', alt: 'splash' },\n  { src: '/images/banter/contacts.png', alt: 'contacts' },\n  { src: '/images/banter/new-chat.png', alt: 'new-chat' },\n  { src: '/images/banter/chats.png', alt: 'chats' },\n  { src: '/images/banter/translation.png', alt: 'translation' },\n  { src: '/images/banter/voice.png', alt: 'voice' }\n]\n\nconst lightboxImages = [\n  '/images/banter/splash.png',\n  '/images/banter/contacts.png',\n  '/images/banter/new-chat.png',\n  '/images/banter/chats.png',\n  '/images/banter/translation.png',\n  '/images/banter/voice.png'\n]\n\nconst galleryGifs = [\n  { src: '/images/banter/add-contact.gif', alt: 'add-contact' },\n  { src: '/images/banter/contacts.gif', alt: 'contacts' },\n  { src: '/images/banter/voice-note.gif', alt: 'voice-note' }\n]\n\nconst lightboxGifs = [\n  '/images/banter/add-contact-1.gif',\n  '/images/banter/contacts-1.gif',\n  '/images/banter/voice-note-1.gif'\n]\n\nclass Banter extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gifSlide: 0,\n      gifLightboxIsOpen: false,\n      imgSlide: 0,\n      imgLightboxIsOpen: false\n    }\n    this.toggleGifLightbox = this.toggleGifLightbox.bind(this)\n    this.toggleImgLightbox = this.toggleImgLightbox.bind(this)\n  }\n\n  toggleGifLightbox = gifSlide => {\n    this.setState({ gifLightboxIsOpen: !this.state.gifLightboxIsOpen, gifSlide })\n  }\n\n  toggleImgLightbox = imgSlide => {\n    this.setState({ imgLightboxIsOpen: !this.state.imgLightboxIsOpen, imgSlide })\n  }\n\n  render() {\n    const { gifSlide, gifLightboxIsOpen, imgSlide, imgLightboxIsOpen } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className='project-container'>\n        {/* <div className='row'> */}\n        <div className='header'>Banter</div>\n        {/* </div> */}\n        <div className='row'>\n          <div className='column'>\n            {/* <Gallery images={galleryImages} toggleLightbox={this.toggleImgLightbox} /> */}\n            <Carousel showArrows={true}>\n              {galleryImages.map(({ src, alt }, idx) => (\n                <div className='' onClick={() => this.toggleImgLightbox(idx + 1)} key={alt}>\n                  <img alt={alt} src={src} />\n                </div>\n              ))}\n            </Carousel>\n            <FsLightbox toggler={imgLightboxIsOpen} slide={imgSlide} sources={lightboxImages} />\n            <div className='video'>\n              <iframe\n                width='100%'\n                height='168%'\n                src='https://www.youtube.com/embed/TDe3Sa-4f2I'\n                borderRa\n                frameBorder='0'\n                allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n                allowFullScreen\n              />\n            </div>\n          </div>\n          <div className='column filled green-fill'>\n            <div className='subheader white'>Overview</div>\n\n            <div className='text'>\n              Banter is a React Native app with realtime text and voice messaging and translation capabilities.\n            </div>\n            <div className='text'>\n              This app was built with two teammates for our final Capstone project at Fullstack Academy. We built Banter\n              with React Native and Expo, a framework and platform built around React Native that helps build native iOS\n              and Android projects using JavaScript and React.\n            </div>\n            <div className='text'>\n              To manage our data, we chose to use the Firebase JavaScript SDK, which supports Authentication, Database,\n              Storage, and Functions on React Native. We leveraged the Firebase Realtime Database to store all our user\n              and chat data in a flattened data structure. This allowed for data to be efficiently downloaded in\n              separate calls, as opposed to a nested structure, where iterating children requires potentially\n              downloading hundreds of megabytes of data.\n            </div>\n            <Divider className={classes.root} />\n\n            <div className='subheader white'>Tech Stack</div>\n            <div className='text'>\n              React Native ∙ Redux • Expo • React Navigation<br />\n              Firebase Realtime Database • Firebase Authentication<br />Firebase Storage • Cloud Functions<br />\n              Cloud Translate API • Cloud Speech-to-Text API\n            </div>\n            <Divider className={classes.root} />\n            <a\n              className='icon'\n              href='https://github.com/laurynbassett/banter-app'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <GitHub />\n            </a>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column'>\n            <div className='filled gray-fill'>\n              <div className='subheader gray'>Data Management</div>\n              <div className='text'>\n                App data was managed in Firebase using the Realtime Database and Cloud Storage. To maximize data\n                retrieval efficiency and simplify queries, we used a flattened data structure, which splits data into\n                separate paths, as opposed to nesting data. We stored data under three main nodes, users, messages, and\n                chats.\n              </div>\n            </div>\n            <div className='filled gray-fill'>\n              <h3>Screens</h3>\n              <div className='text'>\n                My focus was centred around the Single Chat, Contacts, and Add Contact screens. Each screen was\n                connected to our Redux store, allowing them to access/extract state data and dispatch actions at the\n                component level.\n              </div>\n\n              <h4>Single Chat Screen</h4>\n              <div className='text'>\n                The Single Chat Screen displayed one-to-one chats between the current user and a single contact. A new\n                chat was stored in our Realtime Database once the first message was sent, which would dispatch a\n                postMessage function that set off a chain of events, including creating a new chat ID and updating the\n                three main database nodes. Existing chat messages were fetched in groups of 25 at a time to limit the\n                amount of downloaded data. On fetch, a child-added event listener was set on the specific chat path\n                under the messages node, which is triggered once for each existing child and then again every time a new\n                child is added to the specified path, updating the Single Chat screen in realtime.\n              </div>\n              <div className='text'>\n                I also added voice recording and voice-to-text translation functionality within the chat screen. To\n                handle the recording and audio playback I used the AV package from the Expo library. Once a voice note\n                was sent, I stored the local audio in Cloud Storage and passed the download URL to a Cloud Function that\n                used Cloud Speech-to-Text API to transcribe the recording. The audio and transcription were then stored\n                in our Realtime Database to be fetched and appended to the messages in the Single Chat screen.\n              </div>\n\n              <h4>Contacts & Add Contact Screen</h4>\n              <div className='text'>\n                To display contacts data, I used a sectioned list to sort and section contacts alphabetically. To filter\n                contacts, I implemented a search function, which{' '}\n              </div>\n            </div>\n            <div className='filled gray-fill'>\n              <h3>Front-End</h3>\n              <div className='text'>\n                I was responsible for the UI of the All Chats, Single Chat, Group Chat, and Contacts screens, as well as\n                their nested screens. I also designed the app logo and splash screen, bottom tab navigation bar and chat\n                screen headers. For each screen, I used React Native StyleSheets to customize the appearance at the\n                component level. I also used two libraries, React Native Elements, to style the search bar in the\n                Contacts screen, and GiftedChat, which provided the basic message UI.\n              </div>\n            </div>\n          </div>\n          <div className='column'>\n            <Gallery images={galleryGifs} toggleLightbox={this.toggleGifLightbox} />\n            <FsLightbox toggler={gifLightboxIsOpen} slide={gifSlide} sources={lightboxGifs} />\n            {/* <div className='gif'>\n              <img className='image' src='/images/banter/add-contact.gif' alt='add-contact' />\n            </div>\n            <div className='gif'>\n              <img className='image' src='/images/banter/contacts.gif' alt='contacts' />\n            </div>\n            <div className='gif'>\n              <img className='image' src='/images/banter/voice-note.gif' alt='voice-note' />\n            </div> */}\n          </div>\n        </div>\n\n        <div className='row' />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Banter)\n\nconst customStyles = {\n  // header: (base, state) => ({\n  //   ...base,\n  //   borderBottom: '1px dotted pink',\n  //   color: state.isFullscreen ? 'red' : 'blue',\n  //   padding: 20\n  // }),\n  container: () => ({\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  view: () => ({\n    // none of react-images styles are passed to <View />\n    height: window.innerHeight / 2,\n    marginLeft: window.innerWidth * 0.4\n  }),\n  footer: (base, state) => {\n    const opacity = state.interactionIsIdle ? 0 : 1\n    const transition = 'opacity 300ms'\n\n    return { ...base, opacity, transition }\n  }\n}\n","import React from 'react'\n\nimport { ContactForm } from '.'\n\nconst Contact = props => {\n  return (\n    <div className='section-contact' ref={props.contactRef}>\n      <div className='header'>Contact</div>\n      <div className='subheader'>Let's Get In Touch!</div>\n      <ContactForm />\n    </div>\n  )\n}\n\nexport default Contact\n","import axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport Recaptcha from 'react-google-recaptcha';\n\nimport { Snackbar, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Send } from '@material-ui/icons';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst initialState = {\n  name: '',\n  email: '',\n  subject: '',\n  message: '',\n  recaptcha: '',\n  success: false,\n  error: false,\n};\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n    console.log('STATE CHANGED', this.state);\n  }\n\n  handleSubmit = async () => {\n    try {\n      const { name, email, subject, message, recaptcha } = this.state;\n\n      if (name === '') {\n        alert('Full Name field cannot be blank');\n      } else if (email === '') {\n        alert('Email field cannot be blank');\n      } else if (subject === '') {\n        alert('Subject field cannot be blank');\n      } else if (message === '') {\n        alert('Message field cannot be blank');\n      } else if (recaptcha === '') {\n        alert('Please complete recaptcha');\n      } else {\n        await axios({\n          method: 'POST',\n          url: `${process.env.REACT_APP_FORMIK_ENDPOINT}`,\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          data: JSON.stringify({\n            name,\n            email,\n            subject,\n            message,\n          }),\n        });\n\n        this.setState({ success: true });\n        setTimeout(() => this.setState(initialState), 6000);\n      }\n    } catch (err) {\n      this.setState({ error: true });\n      alert('Something went wrong, please try again!'); // eslint-disable-line\n      console.error(err);\n    }\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ success: false });\n  };\n\n  render() {\n    const { name, email, subject, message } = this.state;\n    const style = { fontFamily: 'Open Sans' };\n    return (\n      <Fragment>\n        <form onSubmit={this.handleSubmit} className=\"contact-form\">\n          <StyledTextField\n            required\n            className=\"form-field\"\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={name}\n            inputProps={{ style }}\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <StyledTextField\n            required\n            className=\"form-field\"\n            type=\"text\"\n            name=\"email\"\n            label=\"Email\"\n            value={email}\n            inputProps={{ style }}\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <StyledTextField\n            required\n            className=\"form-field\"\n            type=\"text\"\n            name=\"subject\"\n            label=\"Subject\"\n            value={subject}\n            inputProps={{ style }}\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <StyledTextField\n            required\n            className=\"form-field\"\n            type=\"text\"\n            name=\"message\"\n            label=\"Message\"\n            value={message}\n            multiline\n            rows={6}\n            inputProps={{ style }}\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <div className=\"submit-row\">\n            <div className=\"submit btn\" onClick={this.handleSubmit}>\n              <Send />\n              <span>Send Message</span>\n            </div>\n            {name && email && message && (\n              <Recaptcha\n                sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n                name=\"recaptcha\"\n                onChange={value => this.setState({ recaptcha: value })}\n              />\n            )}\n          </div>\n        </form>\n\n        <Snackbar\n          open={this.state.success}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          bodyStyle={{ backgroundColor: '#c4e3cb' }}>\n          <Alert onClose={this.handleClose} severity=\"success\">\n            Your message has been successfully sent!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={this.state.error}\n          autoHideDuration={6000}\n          onClose={this.handleClose}>\n          <Alert onClose={this.handleClose} severity=\"success\">\n            There was an error sending your message.\n          </Alert>\n        </Snackbar>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledTextField = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    '& label.Mui-focused': {\n      color: '#c4e3cb',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#ececec',\n      },\n      '&:hover fieldset': {\n        borderColor: '#c4e3cb',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#c4e3cb',\n      },\n    },\n  },\n}))(TextField);\n","import React from 'react'\n\nconst Gallery = props => {\n  const { images, toggleLightbox } = props\n\n  return (\n    <div className='gallery'>\n      {images.map(({ src, alt }, idx) => (\n        <div className='image-container' onClick={() => toggleLightbox(idx + 1)} key={alt}>\n          <img alt={alt} src={src} className='image' />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Gallery\n","import React from 'react'\n\nconst GraceShopper = () => {\n  return <div>Grace Shopper</div>\n}\n\nexport default GraceShopper\n","import React, { Component } from 'react'\nimport { GitHub } from '@material-ui/icons'\nimport { Divider } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport FsLightbox from 'fslightbox-react'\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\n\nimport { Gallery } from '.'\n\nconst useStyles = theme => ({\n  root: {\n    margin: 20,\n    width: '90%',\n    alignSelf: 'center',\n    backgroundColor: 'white'\n  }\n})\n\nconst techStack = [\n  { src: '/images/tech-stack/react-native.png', alt: 'react-native' },\n  { src: '/images/tech-stack/expo.png', alt: 'expo' },\n  { src: '/images/tech-stack/firebase.png', alt: 'firebase' },\n  { src: '/images/tech-stack/react-nav.png', alt: 'react-nav' },\n  { src: '/images/tech-stack/native-elements-1.png', alt: 'native-elements' }\n]\n\nconst galleryImages = [\n  { src: '/images/graze/login.png', alt: 'login' },\n  { src: '/images/graze/feed.png', alt: 'feed' },\n  { src: '/images/graze/explore.png', alt: 'explore' },\n  { src: '/images/graze/profile.png', alt: 'profile' },\n  { src: '/images/graze/select.png', alt: 'select' },\n  { src: '/images/graze/edit.png', alt: 'edit' },\n  { src: '/images/graze/settings.png', alt: 'settings' }\n]\n\nconst lightboxImages = [\n  '/images/graze/login.png',\n  '/images/graze/feed.png',\n  '/images/graze/explore.png',\n  '/images/graze/profile.png',\n  '/images/graze/select.png',\n  '/images/graze/edit.png',\n  '/images/graze/settings.png'\n]\n\nconst galleryGifs = [\n  {\n    src: '/images/graze/feed.gif',\n    alt: 'feed'\n  },\n  {\n    src: '/images/graze/explore.gif',\n    alt: 'explore'\n  },\n  {\n    src: '/images/graze/post.gif',\n    alt: 'post'\n  },\n  {\n    src: '/images/graze/settings.gif',\n    alt: 'settings'\n  }\n]\n\nconst lightboxGifs = [\n  '/images/graze/feed-1.gif',\n  '/images/graze/explore-1.gif',\n  '/images/graze/post-1.gif',\n  '/images/graze/settings-1.gif'\n]\n\nclass Graze extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gifSlide: 0,\n      gifLightboxIsOpen: false,\n      imgSlide: 0,\n      imgLightboxIsOpen: false\n    }\n    this.toggleGifLightbox = this.toggleGifLightbox.bind(this)\n    this.toggleImgLightbox = this.toggleImgLightbox.bind(this)\n  }\n\n  toggleGifLightbox = gifSlide => {\n    this.setState({ gifLightboxIsOpen: !this.state.gifLightboxIsOpen, gifSlide })\n  }\n\n  toggleImgLightbox = imgSlide => {\n    this.setState({ imgLightboxIsOpen: !this.state.imgLightboxIsOpen, imgSlide })\n  }\n\n  render() {\n    const { gifSlide, gifLightboxIsOpen, imgSlide, imgLightboxIsOpen } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className='project-container'>\n        {/* <div className='row'> */}\n        <div className='header'>Graze</div>\n        {/* </div> */}\n        <div className='row'>\n          <div className='column'>\n            {/* <Gallery images={galleryImages} toggleLightbox={this.toggleImgLightbox} /> */}\n            <Carousel showArrows={true}>\n              {galleryImages.map(({ src, alt }, idx) => (\n                <div className='' onClick={() => this.toggleImgLightbox(idx + 1)} key={alt}>\n                  <img alt={alt} src={src} />\n                </div>\n              ))}\n            </Carousel>\n            <FsLightbox toggler={imgLightboxIsOpen} slide={imgSlide} sources={lightboxImages} />\n            <div className='filled gray-fill'>\n              <div className='subheader gray'>Data Management</div>\n              <div className='text'>\n                At Fullstack, we focused on Express, Sequelize, and Postgres for the backend of our projects so I wanted\n                to work with a NoSQL database for Graze.\n              </div>\n              <div className='text'>\n                I used Firebase, Google’s mobile and web app development platform, for all of the app's data management.\n                For authenticating users, Firebase Authentication provides a number of out-of-the-box integrations with\n                popular providers and uses a token-based auth system. For user data, including profile info and posts, I\n                used Cloud Firestore, a NoSQL document database, paired with Cloud Storage, to store user photos.\n              </div>\n            </div>\n          </div>\n          <div className='column filled green-fill padded'>\n            <div className='subheader white'>Overview</div>\n\n            <div className='text'>\n              Graze is the product of a 3-day solo hackathon at Fullstack Academy. I wanted to extend my React\n              experience into mobile apps so I decided to build an Instagram clone with React Native.\n            </div>\n            <div className='text'>\n              For its ease-of-use and quick setup, I used Expo, a toolchain built around React Native that helps with\n              developing native iOS and Android projects with JavaScript and React.\n            </div>\n            <Divider className={classes.root} />\n\n            <div className='subheader white'>Tech Stack</div>\n            <div className='text '>\n              React Native • Expo • React Navigation<br />\n              Firebase Firestore • Firebase Authentication<br />\n              Cloud Storage • React Native Elements\n            </div>\n            <div className='tech-stack'>{techStack.map(i => <img src={i.src} alt={i.alt} />)}</div>\n            <Divider className={classes.root} />\n            <a className='icon' href='https://github.com/laurynbassett/graze' target='_blank' rel='noopener noreferrer'>\n              <GitHub />\n            </a>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column'>\n            <div className='filled gray-fill'>\n              <div className='subheader white'>Navigation</div>\n              <div className='text'>\n                I used the React Navigation module to push screens in the app. At the root, the app consists of two\n                flows, the authentication flow and the app flow. These flows are conditionally rendered based on whether\n                a user is logged in or not.\n              </div>{' '}\n              <div className='text'>\n                If a user is not logged in, they are shown the Authentication stack containing the Login and Sign Up\n                screens. If a user is logged in, they are directed to the Home Tab, where they can then navigate to\n                different tabs, such as the Post tab and the Profile tab.\n              </div>\n            </div>\n            <br />\n            <div className='filled gray-fill'>\n              <div className='subheader white'>Posting Media</div>\n              <div className='text'>\n                The Post tab consists of two stack screens: Select, where users can choose an image, either through\n                their camera roll or by taking a photo, and Edit, where users add a caption and post their image to\n                their profile.\n              </div>\n              <div className='text'>\n                I used <code>Expo.Permissions</code> API, which triggers a modal that asks users for permission to use{' '}\n                <code>CAMERA</code> or <code>CAMERA_ROLL</code>. After the user selects the image they want to share,\n                they are pushed to the EditPost screen, where they enter a caption.\n              </div>\n            </div>\n          </div>\n          <div className='column gallery'>\n            <Gallery images={galleryGifs} toggleLightbox={this.toggleGifLightbox} />\n            <FsLightbox toggler={gifLightboxIsOpen} slide={gifSlide} sources={lightboxGifs} />\n          </div>\n        </div>\n\n        <div className='row' />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Graze)\n\nconst customStyles = {\n  container: () => ({\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  view: () => ({\n    // none of react-images styles are passed to <View />\n    height: window.innerHeight / 2,\n    marginLeft: window.innerWidth * 0.4\n  }),\n  footer: (base, state) => {\n    const opacity = state.interactionIsIdle ? 0 : 1\n    const transition = 'opacity 300ms'\n\n    return { ...base, opacity, transition }\n  }\n}\n","import React, { useEffect } from 'react'\nimport { About, Contact, initGA, PageView, Portfolio, Skills, Welcome } from '.'\n\nconst Home = props => {\n  const { aboutScroll, aboutRef, contactRef, portfolioRef, skillsRef } = props\n\n  useEffect(() => {\n    // Set Google Analytics on page\n    initGA()\n    PageView()\n  })\n\n  return (\n    <div id='home'>\n      <Welcome aboutScroll={aboutScroll} />\n      <div id='#about'>\n        <About aboutRef={aboutRef} />\n      </div>\n      <div id='#skills'>\n        <Skills skillsRef={skillsRef} />\n      </div>\n      <div id='#portfolio'>\n        <Portfolio portfolioRef={portfolioRef} />\n      </div>\n      <div id='#contact'>\n        <Contact contactRef={contactRef} />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { Component } from 'react';\n\nimport { List, ListItem } from '@material-ui/core';\nimport { Close, GitHub, LinkedIn, Menu } from '@material-ui/icons';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openDrawer: false,\n      showFixedNav: false,\n    };\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.setFixedNav = this.setFixedNav.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.setFixedNav);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ openDrawer: !this.state.openDrawer });\n  };\n\n  setFixedNav = () => {\n    if (window.scrollY <= 200) {\n      this.setState({\n        showFixedNav: false,\n      });\n    } else {\n      this.setState({\n        showFixedNav: true,\n      });\n    }\n  };\n\n  render() {\n    const { aboutScroll, contactScroll, portfolioScroll, skillsScroll } =\n      this.props;\n\n    return (\n      <div\n        id=\"nav\"\n        className={`nav-${this.state.showFixedNav ? 'fixed' : 'static'}`}>\n        <div id=\"nav-bar\">\n          {/* Nav Bar Logo */}\n          <a href=\"/\">\n            <div id=\"nav-logo\">\n              <img className=\"logo\" src=\"/favicon.ico\" alt=\"logo\" />\n            </div>\n          </a>\n\n          {/* Drawer Toggle Icons */}\n          {this.state.openDrawer ? (\n            <div className=\"nav-toggle-icons\">\n              <Close className=\"nav-icon\" onClick={this.handleDrawerToggle} />\n            </div>\n          ) : (\n            <div className=\"nav-toggle-icons\">\n              <Menu className=\"nav-icon\" onClick={this.handleDrawerToggle} />\n            </div>\n          )}\n\n          {/* Nav Bar Links */}\n          <div id=\"nav-links\">\n            <a className=\"bar-item\" onClick={aboutScroll}>\n              About\n            </a>\n            <a className=\"bar-item\" onClick={skillsScroll}>\n              Skills\n            </a>\n            <a className=\"bar-item\" onClick={portfolioScroll}>\n              Projects\n            </a>\n            <a\n              className=\"bar-item\"\n              href=\"/files/resume.pdf\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              Resume\n            </a>\n            <a className=\"bar-item\" onClick={contactScroll}>\n              Contact\n            </a>\n            <div className=\"icons\">\n              <a\n                className=\"github\"\n                href=\"https://github.com/laurynbassett\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <GitHub />\n              </a>\n              <a\n                className=\"linked-in\"\n                href=\"https://www.linkedin.com/in/laurynbassett/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <LinkedIn />\n              </a>\n            </div>\n          </div>\n\n          {/* Nav Bar Drawer */}\n          {this.state.openDrawer && (\n            <div id=\"nav-drawer\">\n              <Drawer {...this.props} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Drawer = props => {\n  const { aboutScroll, contactScroll, portfolioScroll, skillsScroll } = props;\n\n  return (\n    <List component=\"nav\" className=\"nav-drawer\" aria-label=\"contacts\">\n      <ListItem button className=\"drawer-item\" onClick={aboutScroll}>\n        About\n      </ListItem>\n      <ListItem button className=\"drawer-item\" onClick={skillsScroll}>\n        Skills\n      </ListItem>\n      <ListItem button className=\"drawer-item\" onClick={portfolioScroll}>\n        Portfolio\n      </ListItem>\n      <ListItem button>\n        <a href=\"/files/resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Resume\n        </a>\n      </ListItem>\n      <ListItem button className=\"drawer-item\" onClick={contactScroll}>\n        Contact\n      </ListItem>\n      <ListItem button className=\"drawer-item\" className=\"icons\">\n        <a\n          className=\"github\"\n          href=\"https://github.com/laurynbassett\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <GitHub />\n        </a>\n        <a\n          className=\"linked-in\"\n          href=\"https://www.linkedin.com/in/laurynbassett/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <LinkedIn />\n        </a>\n      </ListItem>\n    </List>\n  );\n};\n","import React from 'react'\n\nconst Orderista = () => {\n  return <div>Orderista</div>\n}\n\nexport default Orderista\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nconst Portfolio = props => {\n  return (\n    <div className=\"section-portfolio\" ref={props.portfolioRef}>\n      <div className=\"header\">Fullstack Academy Projects</div>\n      {/* <div className='subheader'>Click any Project for More Info</div> */}\n      <div className=\"row\">\n        <div className=\"col left\">\n          <div className=\"text-header left\">\n            <a\n              href=\"https://github.com/laurynbassett/banter-app\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              {/* <Link to='/banter'> */}\n              <h3>Banter</h3>\n              <div className=\"subheader\">Mobile App</div>\n              {/* </Link> */}\n            </a>\n          </div>\n          <div className=\"text-body left\">\n            <div className=\"row\">\n              <a\n                href=\"https://github.com/laurynbassett/banter-app\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <img src=\"/images/banter/splash.png\" alt=\"banter-splash\" />\n                <img src=\"/images/banter/contacts.gif\" alt=\"banter-contacts\" />\n                <img src=\"/images/banter/voice-note.gif\" alt=\"banter-chat\" />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"col right\">\n          <div className=\"text-header right\">\n            <a\n              href=\"https://github.com/laurynbassett/graze-app\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              {/* <Link to='/graze'> */}\n              <h3>Graze</h3>\n              <div className=\"subheader\">Mobile App</div>\n              {/* </Link> */}\n            </a>\n          </div>\n          <div className=\"text-body right\">\n            <div className=\"row\">\n              <a\n                href=\"https://github.com/laurynbassett/graze-app\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <img src=\"/images/graze/profile.png\" alt=\"graze-profile\" />\n                <img src=\"/images/graze/post.gif\" alt=\"graze-edit\" />\n                <img src=\"/images/graze/feed.gif\" alt=\"graze-feed\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col left\">\n          <div className=\"text-header left\">\n            <a\n              href=\"https://github.com/laurynbassett/grace-shopper-covid-store\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              {/* <Link to='/grace-shopper'> */}\n              <h3>Grace Shopper</h3>\n              <div className=\"subheader\">Ecommerce Site</div>\n              {/* </Link> */}\n            </a>\n          </div>\n          <div className=\"text-body left\">\n            <div className=\"row\">\n              <a\n                href=\"https://github.com/laurynbassett/grace-shopper-covid-store\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <img\n                  src=\"/images/grace-shopper/home.png\"\n                  alt=\"grace-shopper-home\"\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"col right\">\n          <div className=\"text-header right\">\n            <a\n              href=\"https://github.com/laurynbassett/orderista\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              {/* <Link to='/orderista'> */}\n              <h3>Orderista</h3>\n              <div className=\"subheader\">Restaurant Site</div>\n              {/* </Link> */}\n            </a>\n          </div>\n          <div className=\"text-body right\">\n            <div className=\"row\">\n              <a\n                href=\"https://github.com/laurynbassett/orderista\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                <img src=\"/images/orderista/home.gif\" alt=\"orderista-home\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nconst ScrollHandler = ({ location }) => {\n  useEffect(\n    () => {\n      const element = document.getElementById(location.hash)\n\n      setTimeout(() => {\n        window.scrollTo({\n          behavior: element ? 'smooth' : 'auto',\n          top: element ? element.offsetTop : 0\n        })\n      }, 100)\n    },\n    [ location ]\n  )\n\n  return null\n}\n\nScrollHandler.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string\n  }).isRequired\n}\n\nexport default withRouter(ScrollHandler)\n","import React, { Component } from 'react';\n\nimport { AccountTree, Build, Code } from '@material-ui/icons';\n\nconst VisibilitySensor = require('react-visibility-sensor').default;\n\nexport default class Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange = isVisible => {\n    if (isVisible) {\n      this.setState({ isVisible: true });\n    } else {\n      this.setState({ isVisible: false });\n    }\n  };\n\n  render() {\n    return (\n      <VisibilitySensor onChange={this.onChange}>\n        <div className=\"section-skills\" ref={this.props.skillsRef}>\n          <div className=\"header\">Skills</div>\n          <div className=\"row\">\n            <div className=\"col left\">\n              <div className=\"text-header left\">\n                <Code\n                  className={`section-skills-icon ${\n                    this.state.isVisible ? 'in-view' : ''\n                  }`}\n                />\n                <h3>Client-Side</h3>\n              </div>\n              <div className=\"text-body left\">\n                JavaScript/ES6, TypeScript, HTML/HTML5, CSS/CSS3, React, React\n                Native, Redux, JSON, AJAX, React Navigation, Material-UI, Styled\n                Components, React Elements\n              </div>\n            </div>\n            <div className=\"col middle\">\n              <div className=\"text-header middle\">\n                <AccountTree\n                  className={`section-skills-icon ${\n                    this.state.isVisible ? 'in-view' : ''\n                  }`}\n                />\n                <h3>Server-Side</h3>\n              </div>\n              <div className=\"text-body middle\">\n                Node.js, REST, Express, Sequelize, PostgreSQL, MySQL, PHP,\n                Firebase, AWS Lightsail, AWS RDS\n              </div>\n            </div>\n            <div className=\"col right\">\n              <div className=\"text-header right\">\n                <Build\n                  className={`section-skills-icon ${\n                    this.state.isVisible ? 'in-view' : ''\n                  }`}\n                />\n                <h3>Development | Operations</h3>\n              </div>\n              <div className=\"text-body right\">\n                Git, Webpack, Google Analytics, BigQuery, Socket.io, Babel,\n                Jasmine, Mocha, Chai Enzyme, Heroku, Travis CI\n              </div>\n            </div>\n          </div>\n        </div>\n      </VisibilitySensor>\n    );\n  }\n}\n","import ReactGA from 'react-ga'\n\nexport const initGA = () => {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID)\n}\n\nexport const PageView = () => {\n  ReactGA.pageview(window.location.pathname + window.location.search)\n}\n","import React, { Component } from 'react';\n\nimport { ExpandMore } from '@material-ui/icons';\n\nexport default class Welcome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transition: false,\n    };\n    this.setTransition = this.setTransition.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.setTransition);\n  }\n\n  setTransition = () => {\n    if (window.scrollY <= 200) {\n      this.setState({\n        transition: false,\n      });\n    } else {\n      this.setState({\n        transition: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"section-welcome\">\n        <p>{process.env.FORMIK_ENDPOINT}</p>\n        <div className=\"text large\">Hi There, I'm Lauryn</div>\n        <img\n          className={`profile ${this.state.transition && 'transition'}`}\n          src=\"/images/welcome.png\"\n          alt=\"welcome\"\n        />\n        <div className=\"text medium\">Full Stack Developer</div>\n        <div className=\"round-container\">\n          <a onClick={this.props.aboutScroll}>\n            <div className=\"round\">\n              <ExpandMore\n                className={`arrow one ${this.state.transition && 'transition'}`}\n              />\n              <ExpandMore\n                className={`arrow two ${this.state.transition && 'transition'}`}\n              />\n            </div>\n            {/* <img\n            className={`arrow ${this.state.transition && 'transition'}`}\n            src='/images/down-arrow.png'\n            alt='welcome'\n          /> */}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\n// render() {\n//   return (\n//     <div className=\"section-welcome\">\n//       <img\n//         className=\"background\"\n//         src=\"/images/background.png\"\n//         alt=\"background\"></img>\n//       <p>{process.env.FORMIK_ENDPOINT}</p>\n//       <div className=\"text large\">Lauryn Bassett</div>\n//       <div className=\"text medium\">Full Stack Developer</div>\n//       <div className=\"round-container\">\n//         <a onClick={this.props.aboutScroll}>\n//           <div className=\"round\">\n//             <ExpandMore\n//               className={`arrow one ${this.state.transition && 'transition'}`}\n//             />\n//             <ExpandMore\n//               className={`arrow two ${this.state.transition && 'transition'}`}\n//             />\n//           </div>\n//           {/* <img\n//           className={`arrow ${this.state.transition && 'transition'}`}\n//           src='/images/down-arrow.png'\n//           alt='welcome'\n//         /> */}\n//         </a>\n//       </div>\n//     </div>\n//   );\n// }\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { Banter, GraceShopper, Graze, Home, Orderista } from './components'\n\nconst Routes = props => {\n  const { aboutScroll, aboutRef, contactRef, portfolioRef, skillsRef } = props\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path='/'\n        component={() => (\n          <Home\n            aboutScroll={aboutScroll}\n            aboutRef={aboutRef}\n            contactRef={contactRef}\n            portfolioRef={portfolioRef}\n            skillsRef={skillsRef}\n          />\n        )}\n      />\n      <Route exact path='/banter' component={Banter} />\n      <Route exact path='/grace-shopper' component={GraceShopper} />\n      <Route exact path='/graze' component={Graze} />\n      <Route exact path='/orderista' component={Orderista} />\n    </Switch>\n  )\n}\n\nexport default Routes\n","// import logo from './logo.svg'\nimport './App.css';\n\nimport React, { useRef } from 'react';\n\nimport { Navbar, ScrollHandler } from './components';\nimport Routes from './routes';\n\n// general scroll function for navbar links\nconst scrollToRef = ref => {\n  switch (ref.current.className) {\n    case 'section-about':\n      window.scrollTo(0, ref.current.offsetTop - 100);\n      break;\n\n    case 'section-skills':\n      window.scrollTo(0, ref.current.offsetTop - 110);\n      break;\n\n    case 'section-portfolio':\n      window.scrollTo(0, ref.current.offsetTop - 115);\n      break;\n\n    case 'section-contact':\n      window.scrollTo(0, ref.current.offsetTop - 110);\n      break;\n    default:\n      break;\n  }\n};\n\nfunction App(props) {\n  // refs for each page section\n  const aboutRef = useRef(null);\n  const contactRef = useRef(null);\n  const portfolioRef = useRef(null);\n  const skillsRef = useRef(null);\n\n  // scroll fns for each page section\n  const aboutScroll = () => scrollToRef(aboutRef);\n  const contactScroll = () => scrollToRef(contactRef);\n  const portfolioScroll = () => scrollToRef(portfolioRef);\n  const skillsScroll = () => scrollToRef(skillsRef);\n\n  return (\n    <div className=\"App\">\n      <ScrollHandler />\n      <Navbar\n        aboutScroll={aboutScroll}\n        contactScroll={contactScroll}\n        portfolioScroll={portfolioScroll}\n        skillsScroll={skillsScroll}\n      />\n      <Routes\n        aboutScroll={aboutScroll}\n        aboutRef={aboutRef}\n        contactRef={contactRef}\n        portfolioRef={portfolioRef}\n        skillsRef={skillsRef}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import './index.css';\n\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\ndotenv.config();\n\n// const theme = createMuiTheme({\n//   overrides: {\n//     MuiPaper: {\n//       elevation1: {\n//         boxShadow: '0px 3px 5px 0px rgba(145, 151, 158, .3)',\n//       },\n//     },\n//   },\n// });\n\nReactDOM.render(\n  // <ThemeProvider theme={theme}>\n  <Router>\n    <App />\n  </Router>,\n  // </ThemeProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}